<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="registry.rnc"?>
<registry>
    <types>
        <type>typedef struct ALCdevice <name>ALCdevice</name>;</type>
        <type>typedef struct ALCcontext <name>ALCcontext</name>;</type>
        <type>typedef char <name>ALCboolean</name>;</type>
        <type>typedef char <name>ALCchar</name>;</type>
        <type>typedef signed char <name>ALCbyte</name>;</type>
        <type>typedef unsigned char <name>ALCubyte</name>;</type>
        <type>typedef short <name>ALCshort</name>;</type>
        <type>typedef unsigned short <name>ALCushort</name>;</type>
        <type>typedef int <name>ALCint</name>;</type>
        <type>typedef unsigned int <name>ALCuint</name>;</type>
        <type>typedef int <name>ALCsizei</name>;</type>
        <type>typedef int <name>ALCenum</name>;</type>
        <type>typedef float <name>ALCfloat</name>;</type>
        <type>typedef double <name>ALCdouble</name>;</type>
        <type>typedef void <name>ALCvoid</name>;</type>
    </types>

    <enums namespace="ALC">
        <enum value="0x1007" name="ALC_FREQUENCY" />
        <enum value="0x1008" name="ALC_REFRESH" />
        <enum value="0x1009" name="ALC_SYNC" />
        <enum value="0x1010" name="ALC_MONO_SOURCES" />
        <enum value="0x1011" name="ALC_STEREO_SOURCES" />
    </enums>

    <enums namespace="ALC" group="ErrorCode">
        <enum value="0" name="ALC_NO_ERROR"/>
        <enum value="0xA001" name="ALC_INVALID_DEVICE"/>
        <enum value="0xA002" name="ALC_INVALID_CONTEXT"/>
        <enum value="0xA003" name="ALC_INVALID_ENUM"/>
        <enum value="0xA004" name="ALC_INVALID_VALUE"/>
        <enum value="0xA005" name="ALC_OUT_OF_MEMORY"/>
    </enums>

    <enums namespace="ALC">
        <enum value="0x1000" name="ALC_MAJOR_VERSION" />
        <enum value="0x1001" name="ALC_MINOR_VERSION" />
        <enum value="0x1002" name="ALC_ATTRIBUTES_SIZE" />
        <enum value="0x1003" name="ALC_ALL_ATTRIBUTES" />
        <enum value="0x1004" name="ALC_DEFAULT_DEVICE_SPECIFIER" />
        <enum value="0x1005" name="ALC_DEVICE_SPECIFIER" />
        <enum value="0x1006" name="ALC_EXTENSIONS" />
    </enums>

    <enums namespace="ALC" comment="From ALC_EXT_CAPTURE">
        <enum value="0x310" name="ALC_CAPTURE_DEVICE_SPECIFIER" />
        <enum value="0x311" name="ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER" />
        <enum value="0x312" name="ALC_CAPTURE_SAMPLES" />
    </enums>

<!-- 

    -->

    <commands namespace="ALC">
        <command>
            <proto><ptype>ALCcontext</ptype> *<name>alcCreateContext</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param>const <ptype>ALCint</ptype> *<name>attrlist</name></param>
        </command>
        <command>
            <proto><ptype>ALCboolean</ptype> <name>alcMakeContextCurrent</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
        </command>
        <command>
            <proto>void <name>alcProcessContext</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
        </command>
        <command>
            <proto>void <name>alcSuspendContext</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
        </command>
        <command>
            <proto>void <name>alcDestroyContext</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
        </command>
        <command>
            <proto><ptype>ALCcontext</ptype> *<name>alcGetCurrentContext</name></proto>
        </command>
        <command>
            <proto><ptype>ALCdevice</ptype> *<name>alcGetContextsDevice</name></proto>
            <param><ptype>ALCcontext</ptype> *<name>context</name></param>
        </command>
        <command>
            <proto><ptype>ALCdevice</ptype> *<name>alcOpenDevice</name></proto>
            <param>const <ptype>ALCchar</ptype> *<name>devicename</name></param>
        </command>
        <command>
            <proto><ptype>ALCboolean</ptype> <name>alcCloseDevice</name></proto>
            <param><ptype>ALCdevice</ptype> <name>device</name></param>
        </command>
        <command>
            <proto group="ErrorCode"><ptype>ALCenum</ptype> <name>alcGetError</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
        </command>
        <command>
            <proto><ptype>ALCboolean</ptype> <name>alcIsExtensionPresent</name></proto>
            <param>const <ptype>ALCchar</ptype> *<name>extname</name></param>
        </command>
        <command>
            <proto><ptype>ALCvoid</ptype> *<name>alcGetProcAddress</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param>const <ptype>ALCchar</ptype> *<name>extname</name></param>
        </command>
        <command>
            <proto><ptype>ALCenum</ptype> <name>alcGetEnumValue</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param>const <ptype>ALCchar</ptype> *<name>enumname</name></param>
        </command>
        <command>
            <proto>const <ptype>ALCchar</ptype> *<name>alcGetString</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param><ptype>ALCenum</ptype> <name>param</name></param>
        </command>
        <command>
            <proto>const <ptype>ALCchar</ptype> *<name>alcGetIntegerv</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param><ptype>ALCenum</ptype> <name>param</name></param>
            <param><ptype>ALCsizei</ptype> <name>size</name></param>
            <param><ptype>ALCint</ptype> *<name>values</name></param>
        </command>
        <command>
            <proto><ptype>ALCdevice</ptype> *<name>alcCaptureOpenDevice</name></proto>
            <param>const <ptype>ALCchar</ptype> *<name>devicename</name></param>
            <param><ptype>ALCuint</ptype> <name>frequency</name></param>
            <param><ptype>ALCenum</ptype> <name>format</name></param>
            <param><ptype>ALCsizei</ptype> <name>buffersize</name></param>
        </command>
        <command>
            <proto><ptype>ALCboolean</ptype> <name>alcCaptureCloseDevice</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
        </command>
        <command>
            <proto>void <name>alcCaptureStart</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
        </command>
        <command>
            <proto>void <name>alcCaptureStop</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
        </command>
        <command>
            <proto>void <name>alcCaptureSamples</name></proto>
            <param><ptype>ALCdevice</ptype> *<name>device</name></param>
            <param><ptype>ALCvoid</ptype> *<name>buffer</name></param>
            <param><ptype>ALCsizei</ptype> <name>samples</name></param>
        </command>
    </commands>

    <feature api="ALC" name="ALC_VERSION_1_0" number="1.0">
        <require>
            <enum name="ALC_FREQUENCY" />
            <enum name="ALC_REFRESH" />
            <enum name="ALC_SYNC" />
            <enum name="ALC_MONO_SOURCES" />
            <enum name="ALC_STEREO_SOURCES" />
            <enum name="ALC_NO_ERROR" />
            <enum name="ALC_INVALID_DEVICE" />
            <enum name="ALC_INVALID_CONTEXT" />
            <enum name="ALC_INVALID_ENUM" />
            <enum name="ALC_INVALID_VALUE" />
            <enum name="ALC_OUT_OF_MEMORY" />
            <enum name="ALC_MAJOR_VERSION" />
            <enum name="ALC_MINOR_VERSION" />
            <enum name="ALC_ATTRIBUTES_SIZE" />
            <enum name="ALC_ALL_ATTRIBUTES" />
            <enum name="ALC_DEFAULT_DEVICE_SPECIFIER" />
            <enum name="ALC_DEVICE_SPECIFIER" />
            <enum name="ALC_EXTENSIONS" />
            <command name="alcCreateContext" />
            <command name="alcMakeContextCurrent" />
            <command name="alcProcessContext" />
            <command name="alcSuspendContext" />
            <command name="alcDestroyContext" />
            <command name="alcGetCurrentContext" />
            <command name="alcGetContextsDevice" />
            <command name="alcOpenDevice" />
            <command name="alcCloseDevice" />
            <command name="alcGetError" />
            <command name="alcIsExtensionPresent" />
            <command name="alcGetProcAddress" />
            <command name="alcGetEnumValue" />
            <command name="alcGetString" />
            <command name="alcGetIntegerv" />
            <command name="alcCaptureOpenDevice" />
            <command name="alcCaptureCloseDevice" />
        </require>
    </feature>

    <feature api="ALC" name="ALC_VERSION_1_1" number="1.1">
        <require comment="Reuse EXT_CAPTURE">
            <enum name="ALC_CAPTURE_DEVICE_SPECIFIER" />
            <enum name="ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER" />
            <enum name="ALC_CAPTURE_SAMPLES" />
            <command name="alcCaptureStart" />
            <command name="alcCaptureStop" />
            <command name="alcCaptureSamples" />
        </require>
    </feature>
</registry>